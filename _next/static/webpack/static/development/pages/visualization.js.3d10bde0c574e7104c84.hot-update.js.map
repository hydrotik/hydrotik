{"version":3,"file":"static/webpack/static/development/pages/visualization.js.3d10bde0c574e7104c84.hot-update.js","sources":["webpack:///./src/pages/visualization.tsx"],"sourcesContent":["import React from 'react';\nimport fetch from 'node-fetch';\nimport Papa from 'papaparse';\nimport moment from 'moment';\nimport { NextPage } from 'next';\nimport { Controller, Scene } from 'react-scrollmagic';\nimport { merge, random, range } from \"lodash\";\n\nimport Layout from \"../components/global/layout\";\nimport ProgressiveImage from \"../components/ui/ProgressiveImage\";\nimport Chart from \"../components/ui/Chart\";\nimport Button from \"../components/ui/Button\";\n\nimport DataHelper from \"../utils/DataHelper\";\n\n\nconst colorDark:string = '';\nconst colorMed:string = '';\nconst colorLight:string = '';\n\ntype MyProps = {\n\tdc: DataHelper;\n};\n\ntype CovidProps = {\n  \n};\n\ntype MyState = {\n\tgithub: string;\n\tcovid: CovidProps[];\n\ttotals: Array<object>;\n\tstateData: Array<object>;\n};\n\nfunction numberWithCommas(x:string) {\n\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction NumberValue(props:any) {\n\tconst v = props.value;\n\tif (isNaN(v)) {\n\t\treturn v;\n\t}\n\treturn numberWithCommas(v);\n}\n\nconst dc = new DataHelper()\n\nclass Visualization extends React.Component<MyProps, MyState>{\n\n\n    constructor(props:MyProps) {\n        super(props);\n\n        this.state = {\n            github: '',\n            covid: [],\n            totals:[],\n            stateData:[]\n        };\n\n        this.resolveCsvData = this.resolveCsvData.bind(this);\n        this.resolveStateData = this.resolveStateData.bind(this);\n        this.resolveGithubData = this.resolveGithubData.bind(this);\n        this.parseGithubData = this.parseGithubData.bind(this);\n        //dc.getData(this.resolveCsvData);\n    }\n\n    componentDidMount() {\n        const rdcb = this.resolveStateData;\n\n        dc.getData(\n        \t'https://raw.githubusercontent.com/chazeon/NYState-COVID-19-Tracker/master/data/NYC-covid-19-daily-data-summary.csv', \n        \tfunction(data:any){\n\t\t        Papa.parse(data, {\n\t\t\t        header: false,\n\t\t\t        complete: rdcb,\n\t\t\t        dynamicTyping: true\n\t\t\t    })\n\t\t    }\n\t    )\n\n\t    const cvcb = this.resolveCsvData;\n\n\t    dc.getData(\n        \t'https://raw.githubusercontent.com/nychealth/coronavirus-data/master/summary.csv', \n        \tfunction(data:any){\n\t\t        Papa.parse(data, {\n\t\t\t        header: false,\n\t\t\t        complete: cvcb,\n\t\t\t        dynamicTyping: true\n\t\t\t    })\n\t\t    }\n\t    )\n\n\t    const cghcb = this.resolveGithubData;\n\t    const ParseGithub = this.parseGithubData;\n\n\t    dc.getData(\n        \t'https://api.github.com/repos/nychealth/coronavirus-data/commits', \n        \tfunction(data:any){\n\t\t        ParseGithub(data, {\n\t\t\t        complete: cghcb\n\t\t\t    })\n\t\t    }\n\t    )\n    }\n\n    resolveCsvData(result:any) {\n        this.setState({totals: result.data});\n    }\n\n    resolveStateData(result:any) {\n    \tthis.setState({stateData: result.data});\n    }\n\n    resolveGithubData(result:any) {\n        this.setState({ github: result })\n    }\n\n    parseGithubData(result:any, config:any) {\n    \tconsole.log('Visualization :: parseGithubData()');\n    \tlet r = JSON.parse(result)[0];\n    \tconsole.log(r.commit.author);\n    \tlet d = r.commit.author.date;\n    \tconsole.log(d);\n\n    \tvar tzoffset = (new Date(d)).getTimezoneOffset() * 60000; //offset in milliseconds\n\t\tvar localISOTime = (new Date(d - tzoffset)).toISOString().slice(0, -1);\n\t\t// => '2015-01-26T06:40:36.181'\n\t\tconsole.log('localISOTime');\n\t\tconsole.log(localISOTime);\n\n\t    let n = moment(localISOTime).format('MM/DD/YYYY, hh:hh a');\n\t    console.log(n);\n\t    let f = moment(localISOTime).fromNow();\n\t    console.log(f);\n\t    let s = `Chart updated ${f} on ${n}`;\n\t    config.complete.apply(this, [s]);\n    }\n\n\n    /*\n    fetchCovidData(){\n        fetch('/api/covid')\n        .then(res => res.json())\n        .then((res) => {\n        \tconsole.log(res.success)\n            this.setState({ covid: res.data })\n        })\n        .catch(console.log)\n    }\n\t*/\n    \n    render() {\n        return (\n            <Layout>\n\t\t\t\t<main className=\"flex-1 w-full max-w-4xl p-4 mx-auto md:px-8 md:py-16\">\n\t\t\t\t\t<div className=\"bg-gray-100 mb-16\">\n\t\t\t\t\t\t<Chart />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex flex-col md:flex-row\">\n\t\t\t\t\t\t<div className=\"md:ml-6 md:w-2/3 mb-16\">\n\t\t\t\t\t\t\t<h2 className=\"font-bold mb-3 text-xl\">New Covid cases by day in NYC</h2>\n\t\t\t\t\t\t\t<p className=\"mb-6\">{this.state.github}</p>\n\t\t\t\t\t\t\t<Button href=\"https://github.com/nychealth/coronavirus-data\">NYC Health Github</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"md:w-1/3\">\n\t\t\t\t\t\t\t<h2 className=\"font-bold mb-3 text-xl\">New York State:</h2>\n\t\t\t\t\t\t\t<div className=\"mb-6\">\n\t\t\t\t\t\t\t\t{this.state.totals.map((section:any, index) => (\n\t\t\t\t\t\t\t\t\t<div key={index}><strong>{section[0].replace('*', '')}</strong> <NumberValue value={section[1]} /></div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2 className=\"font-bold mb-3 text-xl\">United States:</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t    </Layout>\n        );\n    }\n}\n\nexport default Visualization;\t\t\t\t\t\t"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAdA;AAeA;AACA;;;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAGA;AAEA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAGA;AACA;AAEA;AAGA;AACA;AADA;AAGA;AAEA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AApIA;AACA;AAsIA;;;;A","sourceRoot":""}