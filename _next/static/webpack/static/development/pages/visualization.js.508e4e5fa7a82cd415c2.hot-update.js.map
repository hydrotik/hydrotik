{"version":3,"file":"static/webpack/static/development/pages/visualization.js.508e4e5fa7a82cd415c2.hot-update.js","sources":["webpack:///./src/components/ui/Chart.tsx"],"sourcesContent":["import React from 'react';\nimport Papa from 'papaparse';\nimport fetch from 'node-fetch';\nimport moment from 'moment';\n\nimport { merge, random, range } from \"lodash\";\nimport { \n\tVictoryPie, \n\tVictoryChart, \n\tVictoryLine, \n\tVictoryTheme, \n\tVictoryScatter,\n\tVictoryStack,\n\tVictoryGroup,\n\tVictoryArea,\n\tVictoryPortal,\n\tVictoryLabel,\n\tVictoryAxis,\n\tVictoryLegend\n} from \"victory\";\n\nimport ChartTheme from \"./ChartTheme\";\n\nconst csvURL = 'https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv?cache-control=';\n\nconst colorDark:string = '#455A64';\nconst colorMed:string = '#90A4AE';\nconst colorLight:string = '#bdc6cb';\n\n\ntype MyProps = {\n\n};\n\ntype MyState = {\n\tdata: Array<object>\n};\n\ntype LabelProps = {\n\tx:string;\n\ty:string;\n}\n\ntype CSVProps = {\n\tDATE_OF_INTEREST:string;\n\tNEW_COVID_CASE_COUNT:string;\n\tHOSPITALIZED_CASE_COUNT:string;\n\tDEATH_COUNT:string;\n}\n\nclass Chart extends React.Component<MyProps, MyState>{\n\n\tconstructor(props:MyProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: []\n\t\t};\n\n\t\tthis.resolveCsvData = this.resolveCsvData.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getCsvData();\n\t}\n\n\t\n\n\tresolveCsvData(result:any) {\n\t\tresult.data.splice(-2, 2);\n\n\t\tthis.setState({\n\t\t\tdata: checkCSVData(result.data)\n\t\t});\n\t}\n\n\t\n\n\tasync getCsvData() {\n\t\tlet csvData = await fetchCsv();\n\t\tPapa.parse(csvData, {\n\t\t\theader: true,\n\t\t\tcomplete: this.resolveCsvData,\n\t\t\tdynamicTyping: true\n\t\t});\n\t}\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<VictoryChart\n\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t//domain={{y: [0, 6000]}}\n\t\t\t\tdomainPadding={{y: [0, 50]}}\n\t\t\t\twidth={600}\n\t\t\t\theight={350}\n\t\t\t\tscale={{ x: \"time\" }}\n\t\t\t>   \n\t\t\t\t<VictoryAxis crossAxis\n\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\tstandalone={false}\n\t\t\t\t\ttickLabelComponent={\n\t\t\t\t\t\t<VictoryLabel \n\t\t\t\t\t\t\trenderInPortal={true} \n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t// new Date() for https://momentjs.com/guides/#/warnings/js-date/ [CLEANUP]\n\t\t\t\t\ttickFormat={(t) => moment(new Date(t)).format('M/D/YY')}\n\t\t\t\t\tfixLabelOverlap={true}\n\t\t\t\t/>\n\t\t\t\t<VictoryAxis dependentAxis crossAxis\n\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\tstandalone={false}\n\t\t\t\t\ttickLabelComponent={\n\t\t\t\t\t\t<VictoryLabel renderInPortal={true} />\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t <VictoryLegend x={75} y={50}\n\t\t\t\t\ttitle=\"Legend\"\n\t\t\t\t\tcenterTitle\n\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\tgutter={10}\n\t\t\t\t\tstyle={{ border: { stroke: \"black\" }, title: {fontSize: 10 } }}\n\t\t\t\t\tdata={[\n\t\t\t\t\t\t{ name: \"New Cases\", symbol: { fill: colorDark, type: \"square\" } },\n\t\t\t\t\t\t{ name: \"Hospitalizations\", symbol: { fill: colorMed, type: \"square\" } },\n\t\t\t\t\t\t{ name: \"New Deaths\", symbol: { fill: colorLight, type: \"square\" } }\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<VictoryGroup\n\t\t\t\t\tanimate={{ duration: 1000 }} \n\t\t\t\t\tcolorScale={[colorDark, colorMed, colorLight]}\n\t\t\t\t>\n\t\t\t\t\t<VictoryArea\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdata: { stroke: colorDark },\n\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\"}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\tx = {(d) => moment(d.DATE_OF_INTEREST, 'MM/DD/YY').toDate().toString()}\n\t\t\t\t\t\ty = \"NEW_COVID_CASE_COUNT\"\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<VictoryArea\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdata: { stroke: colorMed },\n\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\"}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\tx = {(d) => moment(d.DATE_OF_INTEREST, 'MM/DD/YY').toDate().toString()}\n\t\t\t\t\t\ty = \"HOSPITALIZED_CASE_COUNT\"\n\t\t\t\t\t/>\n\t\t\t\t\t<VictoryArea\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdata: { stroke: colorLight },\n\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\"}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\tx = {(d) => moment(d.DATE_OF_INTEREST, 'MM/DD/YY').toDate().toString()}\n\t\t\t\t\t\ty = \"DEATH_COUNT\"\n\t\t\t\t\t/>\n\t\t\t\t</VictoryGroup>\n\t\t\t</VictoryChart>\n\t\t);\n\t}\n}\n\n\n\nconst updateKey = (obj:any, oldkey:string, newkey:string) => {\n\tobj[newkey] = obj[oldkey];\n\tdelete obj[oldkey];\n\treturn obj;\n}\n\nconst checkKey = (obj:any, key:string) => {\n\treturn key in obj;\n}\n\nconst fetchCsv = () => {\n\treturn fetch(csvURL + (new Date()).getTime()).then(function (response:any) {\n\t\tlet reader = response.body.getReader();\n\t\tlet decoder = new TextDecoder('utf-8');\n\n\t\treturn reader.read().then(function (result:any) {\n\t\t\treturn decoder.decode(result.value);\n\t\t});\n\t});\n}\n\nconst checkCSVData = (data:Array<CSVProps>) => {\n\t// FIX for https://github.com/nychealth/coronavirus-data/issues/41\n\tconst badkey = 'Retrieving data. Wait a few seconds and try to cut or copy again.';\n\tconst goodkey = 'DATE_OF_INTEREST';\n\n\tdata.map((obj:CSVProps) => {\n\t\tif(checkKey(obj, badkey)){\n\t\t\tobj = updateKey(obj, badkey, goodkey);\n\t\t}\n\t});\n\n\treturn data;\n}\n\nexport default Chart;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAiBA;AAEA;AACA;AACA;AACA;AAsBA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAIA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;;;AAIA;AACA;AAEA;AACA;AADA;AAGA;;;;;;;;;;AAKA;AACA;;AADA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;AAOA;AAEA;AAEA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAnHA;AACA;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}